Area of largest rectangle in Histogram

Problem Statement: Given an array of integers heights representing the histogram's bar height where the width of each bar is 1  return the area of the largest rectangle in histogram.

Example:

Input: N =6, heights[] = {2,1,5,6,2,3}

Output: 10


Solution 2: Optimised Approach 1

Intuition: The intuition behind the approach is the same as finding the smaller element on both sides but in an optimized way using the concept of the next greater element and the next smaller element.

class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n = heights.size();
        vector<int> leftsmaller(n);
        vector<int> rightsmaller(n);

        //Findind left smaller;
        stack<int> st1,st2;
        for(int i = 0;i<n;i++)
        {
            while(!st1.empty() && heights[st1.top()]>=heights[i]){  //we are storing index
                st1.pop();
            }
            if(!st1.empty()){
                leftsmaller[i]=st1.top()+1;
            }
            else{
                leftsmaller[i]=0;
            }
            st1.push(i);
        }
        //Findind right smaller;
        for(int i = n-1;i>=0;i--)
        {
            while(!st2.empty() && heights[st2.top()]>=heights[i]){  //we are storing index
                st2.pop();
            }
            if(!st2.empty()){
                rightsmaller[i]=st2.top()-1;
            }
            else{
                rightsmaller[i]=n-1;
            }
            st2.push(i);
        }

        int ans = 0;
        for(int i = 0;i<n;i++)
        {
            ans = max(ans,(rightsmaller[i]-leftsmaller[i]+1)*heights[i]);
        }
        return ans;
    }
};

Time Complexity: O( N )

Space Complexity: O(3N) where 3 is for the stack, left small array and a right small array
