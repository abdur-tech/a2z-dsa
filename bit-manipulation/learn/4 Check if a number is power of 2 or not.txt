	
Check if a number is power of 2 or not




Given an integer n, return true if it is a power of two. Otherwise, return false.

An integer n is a power of two, if there exists an integer x such that n == 2x.

 
 Example 1:

Input: n = 1
Output: true
Explanation: 20 = 1
Example 2:

Input: n = 16
Output: true
Explanation: 24 = 16

bool isPowerOfTwo(int n) {
        if(n <= 0) return false;
        return (n&(n-1))==0;
    }

Explabation:--

    Non-positive Numbers:
        Zero: The number zero is not a power of 2
            When n=0,  the expression n&(n-1) evaluetes to 0&(-1). which is 0,  While this satisfies the bit manipulation condition, zero is not considered a power of 2.
        negative number: Negative Numbers: Negative numbers are also not powers of 2. Their binary representations in two's complement form (commonly used in computing) would not satisfy the expression  condition in a meaningful way for powers of 2.
        


