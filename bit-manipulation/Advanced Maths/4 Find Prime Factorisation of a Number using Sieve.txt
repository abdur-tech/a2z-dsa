Find Prime Factorisation of a Number using Sieve


You are given a positive number N. Using the concept of Sieve, compute its prime factorisation.

Example:

Input: 
N = 12246
Output: 
2 3 13 157
Explanation: 
2*3*13*157 = 12246 = N.
Your Task:

Comple the function findPrimeFactors(), which takes a positive number N as input and returns a vector consisting of prime factors. You should implement Sieve algorithm to solve this problem.

 

Expected Time Complexity: O(Nlog(log(N)).

Expected Auxiliary Space: O(N).


vector<int> findPrimeFactors(int N) {

        // Write your code here
        int arr[N+1];
        for(int i = 0;i<=N;i++) arr[i]=i;
        for(int i = 2;i*i<=N;i++)
        {
            if(arr[i]==i)
            {
                for(int j = i*i;j<=N;j+=i)
                {
                    if(arr[j]==j) arr[j]=i;
                }
            }
        }
        vector<int> ans;
        while(N!=1)
        {
            ans.push_back(arr[N]);
            N=N/arr[N];
        }
        return ans;
    }


   O(Nlog(log(N))
   O(N)