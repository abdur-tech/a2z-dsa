Leaders in an Array
Problem Statement: Given an array, print all the elements which are leaders. A Leader is an element that is greater than all of the elements on its right side in the array.

Example 1:
Input:
 arr = [4, 7, 1, 0]
Output:
 7 1 0
Explanation:
 Rightmost element is always a leader. 7 and 1 are greater than the elements in their right side.

Example 2:
Input:
 arr = [10, 22, 12, 3, 0, 6]
Output:
 22 12 6
Explanation:
 6 is a leader. In addition to that, 12 is greater than all the elements in its right side (3, 0, 6), also 22 is greater than 12, 3, 0, 6.


 vector<int> superiorElements(vector<int>&a) {
    // Write your code here.
    vector<int> ans;
    int n = a.size();
    ans.push_back(a[n-1]);
    int max_ele = a[n-1];
    for(int i = n-2;i>=0;i--){
        if(a[i]>max_ele){
            ans.push_back(a[i]);
            max_ele= a[i];
        }
        
    }
    return ans;
}

TC -> O(N)
SC -> O(1)
      O(N) { There is no extra space being used in this approach. But, a O(N) of space for ans array will be used in the worst case }.
