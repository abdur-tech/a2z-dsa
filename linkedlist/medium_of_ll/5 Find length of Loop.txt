Find length of Loop

Problem statement
Youâ€™re given a linked list. The last node might point to null, or it might point to a node in the list, thus forming a cycle.



Find out whether the linked list has a cycle or not, and the length of the cycle if it does.



If there is no cycle, return 0, otherwise return the length of the cycle.



Example:
Input: Linked List: 4 -> 10 -> 3 -> 5 -> 10(at position 2)

Output: Length of cycle = 3

Explanation: The cycle is 10, 3, 5.


int lengthOfLoop(Node *head) {
    Node* slow = head;
    Node* fast = head;
    while(fast && fast->next)
    {
        slow=slow->next;
        fast=fast->next->next;
        if(slow==fast)
        {
            int cnt=1;
            while(slow->next!=fast)
            {
                cnt++;
                slow=slow->next;
            }
            return cnt;
        }
    }
    return 0;
}

O(N)+O(k) where k = length of loop