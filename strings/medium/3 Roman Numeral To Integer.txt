Problem statement
You are given a string 's' that represents a Roman number. Convert the Roman number to an integer and return it.



Roman numerals are represented by seven different symbols: I, V, X, L, C, D, and M.



Table of values:
Symbol       Value
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
For example:
3 is written as III in Roman numeral, just three ones added together. 13 is written as XIII, which is simply X + III. The number 25 is written as XXV, which is XX + V 

Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1:
XII
Sample Output 1:
12
Explanation For Sample Input 1 :
We know that ‘X’ is 10, and we have 2 ‘I’ after it. Therefore the number is 12
Sample Input 2:
XC
Sample Output 2:
90
Constraints:
1 <= roman.length <= 15

int romanToInt(string s) {
   unordered_map<char,int> mp = {{'I',1},{'V',5},{'X',10},{'L',50},{'C',100},{'D',500},{'M',1000}};
   
   if(s.length()==1) return mp[s[0]];
   int ans = 0;
   for(int i = 0;i<s.length();i++)
   {
       if(mp[s[i]]<mp[s[i+1]]){
           ans-=mp[s[i]];
       }
       else{
           ans+=mp[s[i]];
       }
   }
   return ans;
}

O(N)
o(N)
