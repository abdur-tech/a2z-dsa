Problem statement
You are given an array ‘arr’ of ‘n’ strings.



Find the longest common prefix in all these strings.



If there is no common prefix in all the strings return "-1".


Example:
Input: 'arr' = [“abcd”, “abc”, “abref”, “abcde”]

Output: ab

Explanation:
Answer is “ab”, as it is the longest prefix present in all the given strings.

explanation:-

1) sort the arr
2) now arr will look like

    abc
    abcd
    are
3) now you just need to sort first and largest



string commonPrefix(vector<string> &arr, int n)
    {
        if(arr.size()==0) return "-1";
        if(arr.size()==1) return arr[0];
        sort(arr.begin(),arr.end());
        string ans="";
        for(int i = 0;i<arr[0].size();i++)
        {
            if(arr[0][i]!=arr[n-1][i]){
                break;
            }
            else{
                ans.push_back(arr[0][i]);
            }
        }
        return ans==""?"-1":ans;
    }

tc -> O(NlogN) + O(S) S-> smallest word length
sc => O(1)