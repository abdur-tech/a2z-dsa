	
Subarray with k different integers


992. Subarrays with K Different Integers


Given an integer array nums and an integer k, return the number of good subarrays of nums.

A good array is an array where the number of different integers in that array is exactly k.

For example, [1,2,3,1,2] has 3 different integers: 1, 2, and 3.
A subarray is a contiguous part of an array.

 

Example 1:

Input: nums = [1,2,1,2,3], k = 2
Output: 7
Explanation: Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2]
Example 2:

Input: nums = [1,2,1,3,4], k = 3
Output: 3
Explanation: Subarrays formed with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].


class Solution {
public:
    int findSubArrayLessThanK(vector<int>& nums, int k){
        int j = 0;
        unordered_map<int,int> mp;
        int n = nums.size();
        int ans = 0;
        for(int i = 0;i<n;i++){
            mp[nums[i]]++;
            while(mp.size()>k){

                mp[nums[j]]--;
                if(mp[nums[j]]==0) mp.erase(nums[j]);
                j++;
            }
            ans+=(i-j+1);
        }
        return ans;
    }
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        return findSubArrayLessThanK(nums,k)-findSubArrayLessThanK(nums,k-1);
    }
};